#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18449
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcCarManagerment.Views.Logion
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using MvcCarManagerment.Areas.Admin.HTMLHelpers;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Logion/Register.cshtml")]
    public partial class Register : System.Web.Mvc.WebViewPage<MvcCarManagerment.Models.RegisterModel>
    {
        public Register()
        {
        }
        public override void Execute()
        {
            
            #line 2 "..\..\Views\Logion\Register.cshtml"
  
    ViewBag.Title = "注册";
    Layout = null;

            
            #line default
            #line hidden
WriteLiteral("\r\n<!DOCTYPE html>\r\n<html");

WriteLiteral(" lang=\"zh-cn\"");

WriteLiteral(" class=\"no-js\"");

WriteLiteral(">\r\n<!--<![endif]-->\r\n<head>\r\n    <meta");

WriteLiteral(" charset=\"UTF-8\"");

WriteLiteral(" />\r\n    <title>注册用户</title>\r\n    <meta");

WriteLiteral(" name=\"author\"");

WriteLiteral(" content=\"Codrops\"");

WriteLiteral(" />\r\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" href=\"../../css/demo.css\"");

WriteLiteral(" />\r\n    <link");

WriteLiteral(" href=\"../../css/style.css\"");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" />\r\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" href=\"../../css/animate-custom.css\"");

WriteLiteral(" />\r\n</head>\r\n<style");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(">\r\n    .validation-summary-errors\r\n    {\r\n        font-weight: bold;\r\n        col" +
"or: #ff0000;\r\n        font-size: 17px;\r\n    }\r\n    .field-validation-error\r\n    " +
"{\r\n        color: #ff0000;\r\n    }\r\n</style>\r\n<body>\r\n    <div");

WriteLiteral(" class=\"container\"");

WriteLiteral(">\r\n        <header>\r\n               \r\n\t\t\t\t<nav");

WriteLiteral(" class=\"codrops-demos\"");

WriteLiteral(">\r\n                 <h1>注册用户</h1>\r\n\t\t\t\t</nav>\r\n            </header>\r\n        <se" +
"ction>\t\t\t\t\r\n                <div");

WriteLiteral(" id=\"container_demo\"");

WriteLiteral(" >\r\n                    <a");

WriteLiteral(" class=\"hiddenanchor\"");

WriteLiteral(" id=\"toregister\"");

WriteLiteral("></a>\r\n                    <a");

WriteLiteral(" class=\"hiddenanchor\"");

WriteLiteral(" id=\"tologin\"");

WriteLiteral("></a>\r\n                    <div");

WriteLiteral(" id=\"wrapper\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" id=\"login\"");

WriteLiteral(" class=\"animate form\"");

WriteLiteral(">\r\n                            <form");

WriteLiteral("  method=\"post\"");

WriteLiteral("  > \r\n");

WriteLiteral("                             ");

            
            #line 44 "..\..\Views\Logion\Register.cshtml"
                        Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                             ");

            
            #line 45 "..\..\Views\Logion\Register.cshtml"
                        Write(Html.ValidationSummary(true));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                <h1>Register</h1> \r\n                           " +
"     <p> \r\n                                    <label");

WriteLiteral(" for=\"UserName\"");

WriteLiteral(" class=\"uname\"");

WriteLiteral(" data-icon=\"u\"");

WriteLiteral(" > 用户名 </label>\r\n");

WriteLiteral("                                      ");

            
            #line 49 "..\..\Views\Logion\Register.cshtml"
                                 Write(Html.TextBoxFor(entity => entity.UserName, new { placeholder = "用户名" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                      ");

            
            #line 50 "..\..\Views\Logion\Register.cshtml"
                                 Write(Html.ValidationMessageFor(entity => entity.UserName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </p>\r\n                                <p> \r\n   " +
"                                 <label");

WriteLiteral(" for=\"UserPwd\"");

WriteLiteral(" class=\"youpasswd\"");

WriteLiteral(" data-icon=\"p\"");

WriteLiteral("> 密码 </label>\r\n");

WriteLiteral("                                       ");

            
            #line 54 "..\..\Views\Logion\Register.cshtml"
                                  Write(Html.PasswordFor(entity => entity.Password, new { placeholder = "密码" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                       ");

            
            #line 55 "..\..\Views\Logion\Register.cshtml"
                                  Write(Html.ValidationMessageFor(entity => entity.Password));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </p>\r\n                                  <p> \r\n " +
"                                   <label");

WriteLiteral(" for=\"UserPwd\"");

WriteLiteral(" class=\"youpasswd\"");

WriteLiteral(" data-icon=\"p\"");

WriteLiteral("> 再输入一次密码 </label>\r\n");

WriteLiteral("                                       ");

            
            #line 59 "..\..\Views\Logion\Register.cshtml"
                                  Write(Html.PasswordFor(entity => entity.ConfirmPassword, new { placeholder = "再输入一次密码" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                       ");

            
            #line 60 "..\..\Views\Logion\Register.cshtml"
                                  Write(Html.ValidationMessageFor(entity => entity.ConfirmPassword));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </p>\r\n                                <p");

WriteLiteral(" class=\"login button\"");

WriteLiteral(">\r\n                                       <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"注册\"");

WriteLiteral("  />\r\n\t\t\t\t\t\t\t\t</p>\r\n                            \r\n                            </f" +
"orm>\r\n                        </div>\r\n\t\t\t\t\t\t\r\n                    </div>\r\n      " +
"          </div>  \r\n            </section>\r\n    </div>\r\n</body>\r\n</html>\r\n");

        }
    }
}
#pragma warning restore 1591
